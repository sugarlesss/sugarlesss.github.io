<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>内网穿透 - 标签 - 無糖的小宇宙</title>
        <link>https://sugarless.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html</link>
        <description>内网穿透 - 标签 - 無糖的小宇宙</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jaded@foxmail.com (無糖)</managingEditor>
            <webMaster>jaded@foxmail.com (無糖)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 20 Dec 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sugarless.top/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html" rel="self" type="application/rss+xml" /><item>
    <title>frp 内网穿透</title>
    <link>https://sugarless.top/posts/how-to-use-frp.html</link>
    <pubDate>Sun, 20 Dec 2020 00:00:00 &#43;0000</pubDate><author>
        <name>無糖</name>
    </author><guid>https://sugarless.top/posts/how-to-use-frp.html</guid>
    <description><![CDATA[<p>frp 是一个基于 Go 语言开发的专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。frp 上手难度低，配置起来并不算困难。</p>
<p>Github：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener noreffer">https://github.com/fatedier/frp</a></p>
<p>官网：<a href="https://gofrp.org/" target="_blank" rel="noopener noreffer">https://gofrp.org</a></p>
<p>通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网。前提是，内网能访问外网。而不是像特殊单位的纯内网环境，不允许访问外网。</p>
<p>举几个经典的应用场景：</p>
<ul>
<li>开发人员在家办公，需要连接公司内网，进服务器 shell 调试 / 部署；</li>
<li>开发人员联调时，需要给外网提供部署在本地的 web 服务；</li>
<li>出差过程中，需要连接公司内网，登录内部系统审批流程；</li>
<li>访问家庭 NAS 服务器。</li>
</ul>
<p>本文以服务端 centos7，客户端 windows 为例进行演示说明。</p>
<h1 id="一下载最新版本的-frp-到服务器">一、下载最新版本的 frp 到服务器</h1>
<p>下载页面：<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener noreffer">https://github.com/fatedier/frp/releases</a></p>
<p>根据自己的服务器架构，选择对应发行版本的文件下载。一般都是 x86 架构，下 linux_amd64.tar.gz 结尾的版本就可以。</p>
<p>当前最新版本是：0.34.3。</p>
<p>下载到 /root 目录：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> /root <span class="o">&amp;&amp;</span> wget https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_linux_amd64.tar.gz
</code></pre></div><p>解压到 /usr/local 下，重命名文件夹为 frp：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">tar -zxvf frp_0.34.3_linux_amd64.tar.gz --directory<span class="o">=</span>/usr/local/ <span class="o">&amp;&amp;</span> mv frp_0.34.3_linux_amd64 frp
</code></pre></div><h1 id="二配置-frp-systemd-服务">二、配置 frp systemd 服务</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#创建systemd服务文件</span>
vim /usr/lib/systemd/system/frp.service
 
<span class="c1">#写入以下内容，退出并保存</span>
<span class="o">[</span>Unit<span class="o">]</span>
<span class="nv">Description</span><span class="o">=</span>The nginx HTTP and reverse proxy server
<span class="nv">After</span><span class="o">=</span>network.target remote-fs.target nss-lookup.target
 
<span class="o">[</span>Service<span class="o">]</span>
<span class="nv">Type</span><span class="o">=</span>simple
<span class="nv">ExecStart</span><span class="o">=</span>/usr/local/frp/frps -c /usr/local/frp/frps.ini
<span class="nv">KillSignal</span><span class="o">=</span>SIGQUIT
<span class="nv">TimeoutStopSec</span><span class="o">=</span><span class="m">5</span>
<span class="nv">KillMode</span><span class="o">=</span>process
<span class="nv">PrivateTmp</span><span class="o">=</span><span class="nb">true</span>
<span class="nv">StandardOutput</span><span class="o">=</span>syslog
<span class="nv">StandardError</span><span class="o">=</span>inherit
 
<span class="o">[</span>Install<span class="o">]</span>
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</code></pre></div><p>重载配置文件，使之立即生效。</p>
<pre><code>systemctl daemon-reload
</code></pre><p>systemctl 命令：</p>
<pre><code>systemctl start frp #启动
systemctl stop frp #关闭
systemctl restart frp #重启
systemctl status frp #当前状态
systemctl enable frp #开机自启动
systemctl disable frp #取消开机自启动
</code></pre><h1 id="三修改-frp-服务端配置">三、修改 frp 服务端配置</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="c1">#修改frp服务端配置文件</span>
<span class="na">vim /usr/local/frp/frps.ini</span>
 
<span class="c1">#按照以下内容配置，保存并退出</span>
<span class="k">[common]</span>
<span class="na">bind_port</span> <span class="o">=</span> <span class="s">7000 #frp服务端端口</span>
<span class="na">vhost_http_port</span> <span class="o">=</span> <span class="s">8080 #http访问端口</span>
 
<span class="na">[web] #[]中的内容可以自己随便起，但不允许重复，只是起备注的功能而已。</span>
<span class="na">type</span> <span class="o">=</span> <span class="s">http #服务类型，可以设为http,https</span>
<span class="na">custom_domains</span> <span class="o">=</span> <span class="s">xxx.keyboardman.fun #公网域名，记得域名的A记录要解析到外网主机的IP。</span>
<span class="na">auth_token</span> <span class="o">=</span> <span class="s">123456789</span>
 
<span class="na">[ssh] #监听6000端口，外网SSH连接内网机器时，填写的IP即为frp服务端的IP和此处设定的6000端口。</span>
<span class="na">listen_port</span> <span class="o">=</span> <span class="s">6000</span>
<span class="na">auth_token</span> <span class="o">=</span> <span class="s">123456789</span>
 
<span class="na">[tcp] #监听10889端口，转发消息给客户端。</span>
<span class="na">listen_port</span> <span class="o">=</span> <span class="s">10889</span>
<span class="na">auth_token</span> <span class="o">=</span> <span class="s">123456789</span>
</code></pre></div><p>修改完 frp 服务端的配置文件后，需要检查服务器端口是否开放，上面的配置文件用到了 6000/7000/8080/10089 这 4 个端口。</p>
<p>重启 frp 服务端</p>
<pre><code>systemctl restart frp
</code></pre><p>web 配置项用于向外网提供本地 web 服务、ssh 配置项用于连接本地虚拟机的 shell、tcp 配置项用于转发 10889 端口消息给本机。</p>
<p>需要注意的是，以上配置中，web/ssh/tcp 的字眼并非是标准语法，而是我起的一个备注而已。</p>
<h1 id="四下载最新版本的-frp-到本机">四、下载最新版本的 frp 到本机</h1>
<p>同样的，在 Github 的 release 页面下载对应版本的 frp：<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener noreffer">https://github.com/fatedier/frp/releases</a></p>
<p>本机是 windows，因此下载 windows_amd64.zip 版本即可。</p>
<p>下载地址：<a href="https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_windows_amd64.zip" target="_blank" rel="noopener noreffer">https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_windows_amd64.zip</a></p>
<h1 id="五配置客户端参数">五、配置客户端参数</h1>
<p>解压后进入目录，修改 frpc.ini 为如下内容：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="k">[common]</span>
<span class="na">server_addr</span> <span class="o">=</span> <span class="s">xx.xx.xx.xx #部署frp服务端的IP地址</span>
<span class="na">server_port</span> <span class="o">=</span> <span class="s">7000 #frp服务端的端口</span>
<span class="na">privilege_token</span> <span class="o">=</span> <span class="s">123456789 #验证token/密码</span>
 
<span class="k">[web]</span>
<span class="na">type</span> <span class="o">=</span> <span class="s">http</span>
<span class="na">local_ip</span> <span class="o">=</span> <span class="s">127.0.0.1</span>
<span class="na">local_port</span> <span class="o">=</span> <span class="s">5500 #web服务本地端口</span>
<span class="na">remote_port</span> <span class="o">=</span> <span class="s">8080 #frp服务端HTTP端口</span>
<span class="na">custom_domains</span> <span class="o">=</span> <span class="s">xxx.keyboardman.fun #反代域名</span>
 
<span class="c1">#将远程6000端口的tcp流量转发到本地的22端口</span>
<span class="k">[ssh]</span>
<span class="na">type</span> <span class="o">=</span> <span class="s">tcp</span>
<span class="na">local_ip</span> <span class="o">=</span> <span class="s">127.0.0.1</span>
<span class="na">local_port</span> <span class="o">=</span> <span class="s">22</span>
<span class="na">remote_port</span> <span class="o">=</span> <span class="s">6000</span>
 
<span class="c1">#将远程10889端口的tcp流量转发到本地的10889端口</span>
<span class="k">[tcp]</span>
<span class="na">type</span> <span class="o">=</span> <span class="s">tcp</span>
<span class="na">local_ip</span> <span class="o">=</span> <span class="s">127.0.0.1</span>
<span class="na">local_port</span> <span class="o">=</span> <span class="s">10889</span>
<span class="na">remote_port</span> <span class="o">=</span> <span class="s">10889</span>
</code></pre></div><p>此处的 web 项配置意为：frp 服务端会把访问 xxx.keyboardman.fun:8080 端口的请求代理至本地的 5500 端口。</p>
<p>ssh 项：将服务端 6000 端口的 tcp 流量转发至本地的 22 端口</p>
<p>tcp 项：将服务端 10889 端口的 tcp 流量转发至本地的 10889 端口</p>
<h1 id="六运行本机上运行-frp-客户端并测试效果">六、运行本机上运行 frp 客户端并测试效果</h1>
<p>打开 cmd，cd 到 frp 的目录下，frpc.exe 运行客户端</p>
<p></p>
<h2 id="1web-服务访问测试">1）web 服务访问测试</h2>
<p>访问 <a href="http://xxx.keyboardman.fun:8080" target="_blank" rel="noopener noreffer">http://xxx.keyboardman.fun:8080</a>，frp 服务端会将请求代理至本地的 5500 端口。</p>
<p></p>
<h2 id="2socket-消息测试">2）socket 消息测试</h2>
<p></p>
<p>SSH 测试就不演示了，在本机上有搭建 VMware，使用 nat 转发即可把本机的 22 端口 tcp 流量转发到目标虚拟机的 22 端口去，也就是远程 SSH 连接公司内网的应用场景了。</p>
<p>远程连接时，IP 填 frp 服务端所在的 IP，端口填 6000，可以回头看一下上文 frp 服务端的配置，其中 ssh 项的监听端口我选择的就是 6000。</p>
<h1 id="ref">REF</h1>
<p><a href="https://zhuanlan.zhihu.com/p/129076009" target="_blank" rel="noopener noreffer">https://zhuanlan.zhihu.com/p/129076009</a></p>]]></description>
</item></channel>
</rss>
