<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>自动化部署 - 标签 - 無糖的小宇宙</title>
        <link>https://sugarless.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2.html</link>
        <description>自动化部署 - 标签 - 無糖的小宇宙</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jaded@foxmail.com (無糖)</managingEditor>
            <webMaster>jaded@foxmail.com (無糖)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sugarless.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2.html" rel="self" type="application/rss+xml" /><item>
    <title>如何使用 Github webhook 配合宝塔 webhook 自动化部署</title>
    <link>https://sugarless.cn/posts/how-to-use-github-webhook-and-btpanel-webhook.html</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>無糖</name>
    </author><guid>https://sugarless.cn/posts/how-to-use-github-webhook-and-btpanel-webhook.html</guid>
    <description><![CDATA[<p>如果你提交版本后需要手动进入服务器 shell 去 git pull ，那么本文或许对你有些帮助。</p>
<h1 id="一关于-webhook">一、关于 webhook</h1>
<p>为了让你直观的了解到 webhook 能做什么，我例举了两个比较常见的应用场景：</p>
<ul>
<li>
<p>你在 Github 上开源了一个项目，你希望在 git push 提交新版本到 Github 后，部署了宝塔面板的服务器能自动执行 git pull 命令，从 Github 拉取最新版本代码。</p>
</li>
<li>
<p>你在 gitee 或自建的 gogs （一款开源 git server ）上托管代码，你希望在 git push 提交新版本到远程仓库后，服务器能自动执行 git pull 命令，从远程仓库拉取最新版本的代码，并重启服务。</p>
</li>
</ul>
<p>实际上，你可以把它看做一种事件触发器。当满足某种特定条件时，执行一系列特定操作。其中，一方是事件发起者，另一方是事件接收者。</p>
<p>以第一个例子来解释，Github 接收到 push 后，发起一个 HTTP(S) 请求，响应者接收到请求后执行特定命令或业务逻辑。Github 是事件发起者，部署了宝塔面板的服务器是事件执行者。</p>
<h1 id="二配置宝塔面板-webhook">二、配置宝塔面板 webhook</h1>
<p>我的博客部署在腾讯云的服务器上，因为博客框架用的是 hugo ，所以生成的站点源码就是纯静态网页。（之所以不直接白嫖 Github pages 服务，是因为百度 spider 被 Github ban 了）。</p>
<p>所以我希望在写完文章后 push 给 Github 后，部署了宝塔面板的腾讯云服务器能 cd 到博客源码目录下执行 git pull 命令，这样就可以从 Github 拉取最新的版本覆盖服务器上当前的版本了，因为是静态资源，所以无需重启什么服务，git pull 完成后即更新完毕。</p>
<h2 id="1安装宝塔-webhook-插件">1）安装宝塔 WebHook 插件</h2>
<p>去软件商店可以找到这玩意儿</p>
<p></p>
<h2 id="2添加-webhook">2）添加 WebHook</h2>
<p></p>
<h2 id="3配置执行命令">3）配置执行命令</h2>
<pre tabindex="0"><code>cd /www/wwwroot/sugarlesss.github.io;
git pull;
</code></pre><p></p>
<p>配置完成后，就可以看到一条 webhook 规则了。</p>
<p></p>
<h2 id="4获取-webhook-url">4）获取 webhook url</h2>
<p>点击查看秘钥，蓝色选中的部分就是宝塔面板提供的 webhook url ，当链接被访问时，就会执行我们上一步配置的命令，自动 git pull 了。</p>
<p></p>
<h1 id="三配置-github-webhook">三、配置 Github webhook</h1>
<p>还是以我的博客仓库为例，在仓库的 Settings -&gt; Webhooks 页面右上角 add webhook 。</p>
<p></p>
<p>将宝塔提供的 webhook url 填入此处的 Payload URL，并将下方的 Content type 修改为 application/json ，否则 Github 请求此 URL 时，宝塔会返回 403 错误。</p>
<p></p>
<h1 id="注意事项">注意事项</h1>
<ul>
<li>在服务器上生成一对 SSH 秘钥，将公钥配置到你的 Github 账号后，服务器就可以使用 git pull 命令拉取最新版本，不需要输入账号密码了。</li>
<li>如果在配置 Github webhook 时，Content type 你忘记修改为 application/json ，宝塔会返回 403 错误，你配置的一系列自定义命令就无法执行了。</li>
</ul>
<h1 id="ref">REF</h1>
<p><a href="https://www.cnblogs.com/blibli/p/11331509.html" target="_blank" rel="noopener noreffer">https://www.cnblogs.com/blibli/p/11331509.html</a></p>]]></description>
</item><item>
    <title>Hugo - 如何一键发布新文章？</title>
    <link>https://sugarless.cn/posts/hugo-one-click-deployment.html</link>
    <pubDate>Wed, 14 Jul 2021 00:00:00 &#43;0000</pubDate><author>
        <name>無糖</name>
    </author><guid>https://sugarless.cn/posts/hugo-one-click-deployment.html</guid>
    <description><![CDATA[<p>你还在为使用 hugo 发布文章时的繁琐步骤烦恼吗？</p>
<blockquote>
<p>本文默认你已经掌握了 hugo + Github Pages 的博客搭建。</p>
<p>我会以 Windows 平台作为演示，其它系统可参照思路，大同小异。</p>
</blockquote>
<h1 id="一安装-git">一、安装 Git</h1>
<p>先安装 git bash ，官网：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreffer">https://git-scm.com/downloads</a></p>
<h1 id="二使-public-目录成为一个-git-repository">二、使 public 目录成为一个 git repository</h1>
<p>博客源码存放目录：<code>D:\blog\src</code></p>
<pre tabindex="0"><code>D:\blog\src
│  config.toml
├─archetypes 
├─assets
├─content
├─data
├─layouts
├─public    
├─resources
├─static
└─themes
</code></pre><p>接下来将 git 仓库（xxx.github.io）的  .git 文件夹和 CNAME 文件复制一份到博客根目录的 public 文件夹中，使 public 目录成为一个 git 仓库（repository）。</p>
<blockquote>
<p>这样 hugo 在 public 文件夹中生成的文件就可以直接使用 git 命令推送到 Github 了。</p>
<p>如果配合 Github Webhook 使用，就可以把 xxx.github.io 当做源站了。在此基础上，你可以自行购买域名做 CDN 或者在自己的服务器上部署一个镜像站。</p>
</blockquote>
<h1 id="三配置一键命令">三、配置一键命令</h1>
<p>我决定将 <code>git blog</code>  这个命令作为以后日常一键部署的命令。输入以下命令即可完成配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">git config --global alias.blog <span class="s1">&#39;!cd D:\\blog\\src;hugo;cd D:\\blog\\src\\public;git add .;git commit -m &#39;</span>update<span class="s1">&#39;;git push&#39;</span>
</code></pre></div><blockquote>
<p>使用 alias 即可为一系列命令配置一个别名</p>
</blockquote>
<h1 id="四一键部署">四、一键部署</h1>
<p>当你写好文章之后，就可以在任意目录执行这个命令：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">git blog
</code></pre></div><p>此时系统会自动执行下面的命令：</p>
<pre tabindex="0"><code>cd D:\\blog\\src
hugo
cd D:\\blog\\src\\public
git add .
git commit -m 'update'
git push
</code></pre><p>这样就达到了我们的目的：通过一个命令就可以更新博客文件，并自动推送到 github 上。</p>
<h1 id="补充">补充</h1>
<p>如果你同时使用了 <code>Github Pages</code>  和 <code>Gitee Pages</code>  服务，并且还希望能一条命令同时推送到 Github 和 Gitee，那么你可以参考 <a href="https://zhuanlan.zhihu.com/p/341272233" target="_blank" rel="noopener noreffer">https://zhuanlan.zhihu.com/p/341272233</a>，修改 <code>git blog</code>  对应的命令即可。</p>
<p>给你提个醒：<code>git push github</code> ，<code>git push gitee</code> 。</p>
<p>希望本文能帮到正在使用 hugo 的你。</p>]]></description>
</item></channel>
</rss>
