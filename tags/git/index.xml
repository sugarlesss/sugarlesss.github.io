<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Git - 标签 - 無糖的小宇宙</title>
        <link>https://sugarless.cn/tags/git.html</link>
        <description>Git - 标签 - 無糖的小宇宙</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jaded@foxmail.com (無糖)</managingEditor>
            <webMaster>jaded@foxmail.com (無糖)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 18 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sugarless.cn/tags/git.html" rel="self" type="application/rss+xml" /><item>
    <title>如何有效的整理信息？</title>
    <link>https://sugarless.cn/posts/how-to-organize-information-effectively.html</link>
    <pubDate>Sat, 18 Jun 2022 00:00:00 &#43;0000</pubDate><author>
        <name>無糖</name>
    </author><guid>https://sugarless.cn/posts/how-to-organize-information-effectively.html</guid>
    <description><![CDATA[<p>看了那么多短视频、知乎和 B 站的你，为什么啥都没学到？</p>
<p>欢迎来到 <a href="https://sugarless.cn/categories/%e6%8a%98%e8%85%be%e5%b7%a5%e5%9d%8a.html" target="_blank" rel="noopener noreffer"><strong>折腾工坊</strong></a>，我是無糖，今天我想跟你聊聊我是如何整理信息的。</p>
<p>大约在一年前，我开始学习某一领域的知识时遇到了一些问题：</p>
<ul>
<li>学习路径如此复杂，我究竟学到哪儿了？</li>
<li>每天都在学，每天都在忘，细节完全想不起来，怎么办？</li>
<li>逛知乎 / B 站时遇到不错的图文和视频我看完也收藏了，为什么要用的时候想不起来了？</li>
</ul>
<h1 id="一笔记和笔记软件的区别">一、笔记和笔记软件的区别</h1>
<p>我认为上述几个问题的本质原因是由于吸收的知识过于碎片化，无法形成知识网络，所以我既不清楚我学到了哪里，也记不住繁多的细节。所以我开始在网上寻找一些线上笔记应用来尝试解决我遇到的问题。</p>
<p>在协同办公的浪潮下，许多笔记软件也开始崭露头角，像 Notion、语雀 都是我非常喜欢的产品。在体验了一段时间之后，我觉得数字化笔记也许是一个不错的出路，所以就有了这篇文章。</p>
<p>如果你想了解一个行业或一个领域，系统化的学习是不可避免的。在这个过程中，如果没有笔记软件的帮助，我想大概率你会碰到文章开头我提到的三个问题。</p>
<p>为了让你对笔记软件有一个直观的感受，先给你看一下我是怎么做笔记的。下面是我在学习 Java 虚拟机过程中积累下来的笔记：</p>
<figure><a class="lightgallery" href="/post_images/image-20220619150109346.png" title="/post_images/image-20220619150109346.png" data-thumbnail="/post_images/image-20220619150109346.png" data-sub-html="<h2>JVM - 语雀</h2>">
        
    </a><figcaption class="image-caption">JVM - 语雀</figcaption>
    </figure>
<!-- raw HTML omitted -->
<p>对于学生时代的笔记，我认为有几个缺点：</p>
<ul>
<li><strong>难以建立目录，无法快速查找目标知识点</strong>（这几乎是致命缺点）</li>
<li><strong>信息不够丰富</strong>（不能放图）</li>
<li><strong>笔记与笔记之间难以形成关联</strong>（在无法建立目录的前提下，笔记与笔记之间就像是孤岛）</li>
<li><strong>难以修改 / 更正</strong>（你懂得）</li>
<li>写的急，字迹丑（这点是我的问题）</li>
</ul>
<p>上述几点是纸质化笔记天生的劣势，如果你的字迹比较潦草，会进一步加重反复查阅的负担，久而久之记笔记就会成为一种机械性的行为，记完再也不看。</p>
<p>笔记是为了复习服务的，而学习是需要讲究学习成效的，学习付出和收获不成正比的奇怪现象源自于只注重了付出，却没有重视付出的努力是否有效。</p>
<p>所以我认为建立一个线上知识库是相当有必要的。你记录下来的笔记，经过反复查阅后自然会沉淀为你的知识。</p>
<h1 id="二我是如何使用笔记软件的">二、我是如何使用笔记软件的？</h1>
<p>为了服务于反复查阅这个目标，我认为一个笔记软件至少要有以下几个功能</p>
<ul>
<li>知识库目录（为知识分层，将不同方向的知识归类整合）</li>
<li>文章大纲（让你在10秒内明白这篇文章大概在讲什么？快速跳转到你需要的部分）</li>
<li>文章主体（正文）</li>
</ul>
<figure><a class="lightgallery" href="/post_images/image-20220619150255671.png" title="/post_images/image-20220619150255671.png" data-thumbnail="/post_images/image-20220619150255671.png" data-sub-html="<h2>JVM - 语雀</h2>">
        
    </a><figcaption class="image-caption">JVM - 语雀</figcaption>
    </figure>
<!-- raw HTML omitted -->
<p>这是我心目中最好的三段式布局，也是我如何使用笔记软件的关键。</p>
<p>有了这样一个线上知识库，你就可以把知乎 / B 站 / 短视频里学习到的内容转移到你的笔记中，在日积月累的反复查阅中，最后成为你真正掌握的的东西。</p>
<p>你要做的只是为知识分层，然后坚持下来。</p>
<blockquote>
<p>演示软件叫语雀，是阿里系的一个笔记产品。</p>
</blockquote>
<h1 id="三写在最后">三、写在最后</h1>
<p>那么作为程序员，不整点活是不可能的。在使用了语雀一年后，我从逐渐担心语雀是否会停止运营，发展到对互联网产品的数据安全备份的不信任，所以我决定使用开源的笔记产品来代替语雀。</p>
<p>在千挑万选之后，我选择了思源笔记（<a href="https://github.com/siyuan-note/siyuan" target="_blank" rel="noopener noreffer">https://github.com/siyuan-note/siyuan</a>），数据同步我是用 Git 来完成的（我自己有 Git 私服，不需要借助 Github 和 Gitee 这样的在线托管平台）。把数据把握在自己手里，才有安全感。</p>
<p>我们没有必要追求极致的效率，只是不希望把大量的时间浪费在无谓的事情上，剩下来的时间用来好好生活不是更好吗。</p>
<p>每种工具和方法的探索都源自于需求，所以我们可能没办法套用别人的经验。我们需要自己做出适当的调整，而如何调整需要我们对自己有更清楚的认知，对工具和方法有深入的了解，很多问题只能在尝试过程中才能理解，在讨论中才能辨明。</p>
<p>我们常常在一款工具用得不顺手的时候，才能更真切得体会到自己的发力习惯，然后决定去改变自己还是更换工具。</p>
<p>体会和理解工具的过程，也是调整我们对自己认知的过程，找到自己的节奏就好。</p>]]></description>
</item><item>
    <title>如何拥有一个属于自己的 Github ？</title>
    <link>https://sugarless.cn/posts/how-to-build-a-private-git-server-with-gogs.html</link>
    <pubDate>Tue, 30 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>無糖</name>
    </author><guid>https://sugarless.cn/posts/how-to-build-a-private-git-server-with-gogs.html</guid>
    <description><![CDATA[<p>自建 Git Server 有什么用？不用再忍受 Github 龟速网、无限数量私有库、数据不用托管在 Github 上，自己说了算。</p>
<p>本文会以 CentOS7 + Nginx + Gogs 为例，教你如何安装配置，拥有一个属于自己的 “Github” 。</p>
<h1 id="github-的过去">Github 的过去</h1>
<p>自从 GitHub 在 2018 年被微软收购后，每个账号都能免费创建 5 个私有库了，当时非常高兴，觉得 Github 有微软在背后站台，未来可期。但 3 年后却发生了一件事，又一次提醒了我，原来 Github 已经被资本收购了。</p>
<p>2021 年 7 月，由微软、OpenAI、GitHub 联合出品的自动代码生成 AI - Copilot 在推出后的第二天就深陷侵犯版权的质疑声中，惨遭开源社区网友炮轰。为了训练 Copilot ，GitHub 官方确认了他们会使用所有 GitHub 公开代码来训练 Copilot，并且不区分 License 类别。而在之前，明明官方有过 “Copilot是在GPL代码的基础上训练出来的” 这种说法，但之后 GitHub 的 CEO 又表示：&ldquo;每天都有数百名 GitHub 的开发者在使用 Copilot ，如果预览版进展顺利的话，我们将计划在未来某个时候将其扩展为付费产品。&quot;，完全就是一副视 General Public License 如无物的样子。</p>
<p>富人和大公司带头冲版权，一边冲一边告诉大众，你们要遵守版权，不可以学我。（哄堂大笑</p>
<h1 id="why-gogs-">Why Gogs ？</h1>
<p>大公司普遍使用的是内部开发的 Git Server，像我们这样的个人开发者，选择一个开源 Git Server 自行搭建是比较适合的。</p>
<p>我知道有几个不错的开源 Git Server 可以考虑：</p>
<ul>
<li>GitLab</li>
<li>Gogs</li>
<li>Gitea</li>
<li>GitStack</li>
</ul>
<p>最终，我选择 Gogs 的主要原因是它资源占用极低，你甚至可以用树莓派来搭建一个 Gogs，1C2G 的配置轻轻松松带 Gogs。</p>
<p>比之 GitLab，Gogs 在资源占用和性能上的优势是非常明显的，因此它非常适合在硬件配置不高的服务器搭建。</p>
<p>官网：<a href="https://gogs.io" target="_blank" rel="noopener noreffer">https://gogs.io</a></p>
<p>演示站：<a href="https://try.gogs.io/" target="_blank" rel="noopener noreffer">https://try.gogs.io/</a></p>
<p>Github：<a href="https://github.com/gogs/gogs" target="_blank" rel="noopener noreffer">https://github.com/gogs/gogs</a></p>
<h1 id="一安装-gogs">一、安装 Gogs</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">adduser git <span class="c1">#创建用户 git</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">passwd git <span class="c1">#设置git用户的密码</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">groupadd git <span class="c1">#创建用户组 git</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">usermod -G git git <span class="c1">#将git用户添加到git用户组中</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">su git <span class="c1">#切换到git用户shell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ~ <span class="c1">#进入/home/git</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wget https://dl.gogs.io/0.12.3/gogs_0.12.3_linux_amd64.zip <span class="c1">#下载gogs</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">unzip gogs_0.12.3_linux_amd64.zip <span class="c1">#解压gogs压缩包</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">su <span class="c1">#切回root用户</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cp /home/git/gogs/scripts/systemd/gogs.service /usr/lib/systemd/system/ <span class="c1">#复制service文件</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">systemctl <span class="nb">enable</span> gogs.service <span class="c1">#启用gogs服务（开机自启）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">systemctl start gogs <span class="c1">#启动gogs</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">systemctl status gogs <span class="c1">#查看gogs运行状态</span>
</span></span></code></pre></div><p>安装完成后，就可以用访问 http://ip:3000 配置 Gogs 了，不过我建议你别急着填下面的配置，先把 SSL 证书搞定，接着往下看吧。</p>
<blockquote>
<p>如果无法访问，说明服务器入方向的 3000 端口没有打开。</p>
<ul>
<li>
<p>请在服务器供应商（如阿里云或腾讯云等）提供的控制面板设置对应的 防火墙/安全组 规则，开放入方向的 3000 端口。</p>
</li>
<li>
<p>如果你使用了类似于宝塔之类的控制面板，请检查面板防火墙中是否中开放了 3000 端口。</p>
</li>
</ul>
</blockquote>
<a class="lightgallery" href="/post_images/image-20211130223902655.png" title="/post_images/image-20211130223902655.png" data-thumbnail="/post_images/image-20211130223902655.png">
        
    </a>
<!-- raw HTML omitted -->
<h1 id="二配置域名与https">二、配置域名与HTTPS</h1>
<h2 id="21配置域名访问">2.1、配置域名访问</h2>
<p>将域名解析到服务器 IP 上，在 Nginx 配置文件中新增如下配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">server</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">server_name</span> <span class="s">git.yourdomain.com</span><span class="p">;</span> <span class="c1"># 域名修改为你自己的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    
</span></span><span class="line"><span class="cl">    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">proxy_pass</span> <span class="s">http://localhost:3000</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="kn">access_log</span>  <span class="s">/www/wwwlogs/yourdomain.access.log</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">error_log</span>  <span class="s">/www/wwwlogs/yourdomain.error.log</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这样就可以通过 HTTP 的方式访问 Gogs 了：http://git.yourdomain.com 。</p>
<p>我们接着配置 SSL 证书，先不急着填写 Gogs 的配置，直接一步到位。</p>
<a class="lightgallery" href="/post_images/image-20211130232845697.png" title="/post_images/image-20211130232845697.png" data-thumbnail="/post_images/image-20211130232845697.png">
        
    </a>
<!-- raw HTML omitted -->
<h2 id="22配置-ssl-证书">2.2、配置 SSL 证书</h2>
<p>你可以按照下面的 Nginx 配置为模板，来配置你的 Gogs 站点。</p>
<p>根据你的需求，你可以自由选择是否强制 HTTPS。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">server</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">listen</span> <span class="mi">443</span> <span class="s">ssl</span> <span class="s">http2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">server_name</span> <span class="s">git.yourdomain.com</span><span class="p">;</span> <span class="c1"># 域名修改为你自己的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    
</span></span><span class="line"><span class="cl">    <span class="kn">ssl_certificate</span>    <span class="s">/xxx/xxx/xxx.pem</span><span class="p">;</span> <span class="c1"># 证书修改为你自己的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kn">ssl_certificate_key</span>    <span class="s">/xxx/xxx/xxx.pem</span><span class="p">;</span> <span class="c1"># 证书修改为你自己的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kn">ssl_protocols</span> <span class="s">TLSv1.1</span> <span class="s">TLSv1.2</span> <span class="s">TLSv1.3</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">ssl_ciphers</span> <span class="s">EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">ssl_prefer_server_ciphers</span> <span class="no">on</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">ssl_session_cache</span> <span class="s">shared:SSL:10m</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">ssl_session_timeout</span> <span class="mi">10m</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">add_header</span> <span class="s">Strict-Transport-Security</span> <span class="s">&#34;max-age=31536000&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">    <span class="c1"># HTTP 重定向到 HTTPS
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1"># if ($server_port !~ 443){
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">#     rewrite ^(/.*)$ https://$host$1 permanent;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1"># }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1"># error_page 497  https://$host$request_uri;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    
</span></span><span class="line"><span class="cl">    <span class="c1"># 反向代理
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">proxy_pass</span> <span class="s">http://localhost:3000</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">#禁止访问的文件或目录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kn">location</span> <span class="p">~</span> <span class="sr">^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">return</span> <span class="mi">404</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kn">access_log</span>  <span class="s">/www/wwwlogs/yourdomain.access.log</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kn">error_log</span>  <span class="s">/www/wwwlogs/yourdomain.error.log</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>配置完成后，你就可以通过 HTTPS 的方式访问 Gogs 了：https://git.yourdomain.com</p>
<a class="lightgallery" href="/post_images/image-20211130233728858.png" title="/post_images/image-20211130233728858.png" data-thumbnail="/post_images/image-20211130233728858.png">
        
    </a>
<!-- raw HTML omitted -->
<p>现在我们可以开始填写 Gogs 的配置了。</p>
<h1 id="三配置-gogs">三、配置 Gogs</h1>
<p>此时我们已经配置好了 HTTPS 访问，那么在配置 Gogs 中有几处域名的设置需要注意。下面是一份样例配置，几处需要注意的域名我用红框标注出来了。</p>
<a class="lightgallery" href="/post_images/image-20211130235300442.png" title="/post_images/image-20211130235300442.png" data-thumbnail="/post_images/image-20211130235300442.png">
        
    </a>
<!-- raw HTML omitted -->
<p>填写完配置后，点击立即安装，就完成了。</p>
<a class="lightgallery" href="/post_images/image-20211130235544814.png" title="/post_images/image-20211130235544814.png" data-thumbnail="/post_images/image-20211130235544814.png">
        
    </a>
<!-- raw HTML omitted -->
<p>那么剩下的就跟 Github 一样，添加 SSH Key 到自己的账户中，就可以愉快建库冲浪了。</p>
<blockquote>
<p>Gogs 除了安装引导中的配置项，其实还有不少额外的配置。</p>
<p>在 <code>custom/conf/app.ini</code> 文件中修改相应配置项的值即可。</p>
<p>完整配置项样例：https://github.com/gogs/gogs/blob/main/conf/app.ini</p>
<p>旧版本配置文件手册参考（中文）：https://www.bookstack.cn/read/gogs_zh/advanced-configuration_cheat_sheet.md</p>
</blockquote>
<h1 id="ref">REF</h1>
<p><a href="https://gogs.io/docs/installation/install_from_binary" target="_blank" rel="noopener noreffer">https://gogs.io/docs/installation/install_from_binary</a></p>
<p><a href="https://gogs.io/docs/installation/configuration_and_run" target="_blank" rel="noopener noreffer">https://gogs.io/docs/installation/configuration_and_run</a></p>
<p><a href="https://www.zhihu.com/question/283143882/answer/434872781" target="_blank" rel="noopener noreffer">https://www.zhihu.com/question/283143882/answer/434872781</a></p>
<p><a href="https://www.bookstack.cn/read/gogs_zh/advanced-configuration_cheat_sheet.md" target="_blank" rel="noopener noreffer">https://www.bookstack.cn/read/gogs_zh/advanced-configuration_cheat_sheet.md</a></p>]]></description>
</item></channel>
</rss>
