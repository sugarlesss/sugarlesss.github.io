<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ab - 标签 - 無糖的小宇宙</title>
        <link>https://sugarless.top/tags/ab.html</link>
        <description>ab - 标签 - 無糖的小宇宙</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jaded@foxmail.com (無糖)</managingEditor>
            <webMaster>jaded@foxmail.com (無糖)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 13 Jun 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://sugarless.top/tags/ab.html" rel="self" type="application/rss+xml" /><item>
    <title>使用 apache benchmark 对 API 进行压力测试</title>
    <link>https://sugarless.top/posts/stress-test-the-api-using-apache-benchmark.html</link>
    <pubDate>Sat, 13 Jun 2020 00:00:00 &#43;0000</pubDate><author>
        <name>無糖</name>
    </author><guid>https://sugarless.top/posts/stress-test-the-api-using-apache-benchmark.html</guid>
    <description><![CDATA[<p>在开发 API 完成后，测试的环节中免不了要进行压力测试。postman 的 runner 只支持串行化测试，不支持并发。jmeter 需要在本机上安装 JDK，且需要配置好 JAVA 环境变量，安装略显复杂，软件界面对小白并不友好，非开箱即用的工具。权衡之后，我个人推荐任何对压力测试毫无经验的人优先选择使用 Linux 环境下的 ab（apache benchmark）压测工具进行压力测试。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 安装 ab</span>
yum -y install httpd-tools

<span class="c1"># 显示可选的参数列表及说明</span>
ab -help
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 测试 </span>
<span class="c1"># c：并发数量</span>
<span class="c1"># n：总计请求数量</span>
ab -c <span class="m">100</span> -n <span class="m">10000</span> https://yourdomain.com/getUserInfo?id<span class="o">=</span>36<span class="p">&amp;</span><span class="nv">token</span><span class="o">=</span>6vPgUT0gG1RyzBRKxYsSNBgwFwM1mQLz
</code></pre></div><p>耐心等待测试完毕，以下是测试报告</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">Server Software: nginx
Server Hostname: yourdomain.com
Server Port: <span class="m">443</span>
SSL/TLS Protocol: TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128
 
Document Path: getUserInfo?id<span class="o">=</span>36<span class="p">&amp;</span><span class="nv">token</span><span class="o">=</span>6vPgUT0gG1RyzBRKxYsSNBgwFwM1mQLz
Document Length: <span class="m">41</span> bytes
 
Concurrency Level: <span class="m">200</span>
Time taken <span class="k">for</span> tests: 187.546 seconds
Complete requests: <span class="m">30000</span>
Failed requests: <span class="m">53</span>
<span class="o">(</span>Connect: 0, Receive: 0, Length: 53, Exceptions: 0<span class="o">)</span>
Write errors: <span class="m">0</span>
Non-2xx responses: <span class="m">47</span>
Total transferred: <span class="m">11695535</span> bytes
HTML transferred: <span class="m">1235123</span> bytes
Requests per second: 159.96 <span class="o">[</span><span class="c1">#/sec] (mean)</span>
Time per request: 1250.304 <span class="o">[</span>ms<span class="o">]</span> <span class="o">(</span>mean<span class="o">)</span>
Time per request: 6.252 <span class="o">[</span>ms<span class="o">]</span> <span class="o">(</span>mean, across all concurrent requests<span class="o">)</span>
Transfer rate: 60.90 <span class="o">[</span>Kbytes/sec<span class="o">]</span> received
 
Connection Times <span class="o">(</span>ms<span class="o">)</span>
min mean<span class="o">[</span>+/-sd<span class="o">]</span> median max
Connect: <span class="m">0</span> <span class="m">420</span> 1078.0 <span class="m">286</span> <span class="m">63684</span>
Processing: <span class="m">50</span> <span class="m">640</span> 996.0 <span class="m">609</span> <span class="m">69848</span>
Waiting: <span class="m">50</span> <span class="m">625</span> 248.5 <span class="m">608</span> <span class="m">1796</span>
Total: <span class="m">217</span> <span class="m">1060</span> 1452.9 <span class="m">951</span> <span class="m">69848</span>
 
Percentage of the requests served within a certain <span class="nb">time</span> <span class="o">(</span>ms<span class="o">)</span>
50% <span class="m">951</span> <span class="c1"># 50%的请求在951ms内返回</span>
66% <span class="m">1074</span>
75% <span class="m">1152</span>
80% <span class="m">1205</span>
90% <span class="m">1391</span> <span class="c1"># 90%的请求在1391ms内返回</span>
95% <span class="m">1660</span>
98% <span class="m">2043</span>
99% <span class="m">2928</span> <span class="c1"># 99%的请求在2928ms内返回</span>
100% <span class="m">69848</span> <span class="o">(</span>longest request<span class="o">)</span>
</code></pre></div><p>比较重要的也就是最后这部分的 percent line 了，jmeter 只有 90%、95%、99% 这三个量级，ab 从 50% 到 100% 都有。</p>]]></description>
</item></channel>
</rss>
